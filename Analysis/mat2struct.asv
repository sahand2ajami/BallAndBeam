function SubjectData = mat2struct(SubjectData, start, stop)
    MVC_string = 'MVC';

    % with'*.' dir will read folder names only
    folderName = dir('*');
    
    % i starts from 3 because folderName first two elements are '.' and '..'
    for i = start:stop
        % go to the folder
        folderName = dir('*');
%         folderName(i).name
        cd(folderName(i).name);
        folderName_phase = dir('*');

        % Make the variable data as a matlab structure
        data = struct();

        % This is in participants folder and loops between each phase the
        % term k starts from 3 to ignore the first two elemets '.' and '..'
        n_phase = length(folderName_phase) - 2;
        for k = 3:3+n_phase-1
%             folderName_phase(k).name
            % Go through each phase folder
            cd(folderName_phase(k).name);
            
            % read .mat files only
            fileName = dir('*.mat');
            EMGFolder = dir("EMG");
%             EMGFolder
%             fileName.name
%             fileName
            % Saves the .mat files into the data structure only if the
            % folder is not empty
            if ~isempty(fileName)
                for j=1:length(fileName)
                    phase_name = string(folderName_phase(k).name);
                    data_name = string(fileName(j).name(1:end-4));

                    if ~contains(data_name, MVC_string)

                        % load the .mat data into the data structure
                        my_file = load(fileName(j).name);
                        
                        if ~contains(fileName(j).name, 'scores.mat')
                            for trialnumber = 1:max(my_file.data.TrialNumber)
                                SubjectData.(strcat('S', '_', folderName(i).name(1:2))). ...
                                    (phase_name).(strcat("trial", num2str(trialnumber))). ...
                                    (data_name) = my_file.data(my_file.data.TrialNumber==trialnumber, :);
                            end
                        else
                        % Save score data in the SubjectData strucure
                            SubjectData.(strcat('S', '_', folderName(i).name(1:2))). ...
                                (phase_name).('trial51').(data_name) = max(my_file.data.fail);
                        end
                        %% FOR EMG

                    elseif contains(data_name, 'EMG')
                        cd('EMG')
                        EmgFileName = dir('*.mat');
                        if ~isempty(EmgFileName)
                            for jj = 1:length(EmgFileName)
                                emg_file = load(EmgFileName(jj).name);
                                
                                SubjectData.(strcat('S', '_', folderName(i).name(1:2))). ...
                                    (phase_name).(strcat("trial", num2str(jj))). ...
                                    ('emg_raw') = emg_file.data;
                            end
                        end
                        cd ..
                    
                        %% For MVC
                    elseif contains(data_name, MVC_string)
%                         data_name
                        MVC_file = load(strcat(data_name, ".mat"));
                        SubjectData.(strcat('S', '_', folderName(i).name(1:2))). ...
                                    ('MVC').('emg_raw') = MVC_file.data;
                        

                    end


                end
            else
                
                
                cd("EMG");
                EmgFileName = dir("*.mat");
                if ~isempty(EmgFileName)
                    for jj = 1:length(EmgFileName)
                        emg_file = load(EmgFileName(jj).name);
                        
                        
                        SubjectData.(strcat('S', '_', folderName(i).name(1:2))). ...
                            (folderName_phase(k).name).(strcat("trial", num2str(jj))) = emg_file.data;
                    end
                end
                cd ..
            end


            
    
            % go back to the previous folder
            cd ..
        end
        % go back to the previous folder
        cd ..
    end
    
end